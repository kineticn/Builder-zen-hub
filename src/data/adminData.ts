import {
  ComplianceMetrics,
  RiskFlag,
  BillSyncMetrics,
  AdminConfiguration,
} from "@/types/admin";

export const mockComplianceData: ComplianceMetrics = {
  overall: {
    category: "Overall Compliance",
    completed: 847,
    total: 1000,
    percentage: 84.7,
    lastUpdated: "2024-03-15T14:30:00Z",
    critical: false,
  },
  categories: [
    {
      category: "Legal Agreements",
      completed: 950,
      total: 1000,
      percentage: 95.0,
      lastUpdated: "2024-03-15T14:30:00Z",
      critical: false,
    },
    {
      category: "Privacy Policy",
      completed: 820,
      total: 1000,
      percentage: 82.0,
      lastUpdated: "2024-03-15T14:25:00Z",
      critical: false,
    },
    {
      category: "Terms of Service",
      completed: 780,
      total: 1000,
      percentage: 78.0,
      lastUpdated: "2024-03-15T14:20:00Z",
      critical: true,
    },
    {
      category: "Data Processing",
      completed: 890,
      total: 1000,
      percentage: 89.0,
      lastUpdated: "2024-03-15T14:15:00Z",
      critical: false,
    },
    {
      category: "Cookie Consent",
      completed: 920,
      total: 1000,
      percentage: 92.0,
      lastUpdated: "2024-03-15T14:10:00Z",
      critical: false,
    },
  ],
  trends: {
    week: 2.3,
    month: 5.7,
    quarter: 12.4,
  },
};

export const mockRiskFlags: RiskFlag[] = [
  {
    id: "risk-001",
    userId: "user-12345",
    userName: "Sarah Johnson",
    type: "high",
    category: "financial",
    title: "Unusual Spending Pattern Detected",
    description:
      "Account shows spending 300% above normal in the last 48 hours",
    severity: 8,
    status: "active",
    createdAt: "2024-03-15T10:15:00Z",
    assignedTo: "john.doe@billbuddy.com",
    tags: ["fraud-detection", "spending-anomaly", "urgent"],
  },
  {
    id: "risk-002",
    userId: "user-67890",
    userName: "Michael Chen",
    type: "medium",
    category: "security",
    title: "Multiple Failed Login Attempts",
    description: "Account has had 5 failed login attempts in the last hour",
    severity: 6,
    status: "investigating",
    createdAt: "2024-03-15T09:45:00Z",
    assignedTo: "security@billbuddy.com",
    tags: ["security", "authentication", "brute-force"],
  },
  {
    id: "risk-003",
    userId: "user-11111",
    userName: "Emma Davis",
    type: "low",
    category: "compliance",
    title: "Incomplete Legal Agreement",
    description: "User has not accepted the updated privacy policy",
    severity: 3,
    status: "active",
    createdAt: "2024-03-15T08:30:00Z",
    tags: ["compliance", "legal", "privacy"],
  },
  {
    id: "risk-004",
    userId: "user-22222",
    userName: "Robert Wilson",
    type: "high",
    category: "operational",
    title: "Bill Sync Failures",
    description:
      "Multiple consecutive failures to sync bills from bank account",
    severity: 7,
    status: "resolved",
    createdAt: "2024-03-14T16:20:00Z",
    resolvedAt: "2024-03-15T11:30:00Z",
    assignedTo: "ops@billbuddy.com",
    tags: ["sync", "banking", "operational"],
  },
  {
    id: "risk-005",
    userId: "user-33333",
    userName: "Lisa Anderson",
    type: "medium",
    category: "financial",
    title: "Duplicate Payment Detection",
    description:
      "System detected potential duplicate payment for electric bill",
    severity: 5,
    status: "investigating",
    createdAt: "2024-03-15T12:10:00Z",
    assignedTo: "finance@billbuddy.com",
    tags: ["payment", "duplicate", "billing"],
  },
  {
    id: "risk-006",
    userId: "user-44444",
    userName: "David Brown",
    type: "low",
    category: "security",
    title: "Password Strength Warning",
    description: "User account has a weak password that should be updated",
    severity: 2,
    status: "dismissed",
    createdAt: "2024-03-13T14:00:00Z",
    resolvedAt: "2024-03-15T09:00:00Z",
    tags: ["password", "security", "weak-auth"],
  },
];

export const mockBillSyncData: BillSyncMetrics = {
  webhooks: [
    {
      id: "webhook-plaid",
      name: "Plaid Banking Integration",
      endpoint: "https://api.billbuddy.com/webhooks/plaid",
      provider: "Plaid",
      status: "healthy",
      lastPing: "2024-03-15T14:29:00Z",
      responseTime: 145,
      successRate: 99.8,
      totalRequests: 15420,
      failedRequests: 31,
      uptime: 99.92,
      errorMessages: [],
    },
    {
      id: "webhook-yodlee",
      name: "Yodlee Data Aggregation",
      endpoint: "https://api.billbuddy.com/webhooks/yodlee",
      provider: "Yodlee",
      status: "degraded",
      lastPing: "2024-03-15T14:27:00Z",
      responseTime: 2340,
      successRate: 94.2,
      totalRequests: 8920,
      failedRequests: 517,
      uptime: 97.8,
      errorMessages: ["Timeout on transaction fetch", "Rate limit exceeded"],
    },
    {
      id: "webhook-finicity",
      name: "Finicity Open Banking",
      endpoint: "https://api.billbuddy.com/webhooks/finicity",
      provider: "Finicity",
      status: "healthy",
      lastPing: "2024-03-15T14:28:00Z",
      responseTime: 203,
      successRate: 98.9,
      totalRequests: 12100,
      failedRequests: 133,
      uptime: 99.1,
      errorMessages: [],
    },
    {
      id: "webhook-mx",
      name: "MX Platform Integration",
      endpoint: "https://api.billbuddy.com/webhooks/mx",
      provider: "MX",
      status: "down",
      lastPing: "2024-03-15T13:45:00Z",
      responseTime: 0,
      successRate: 0,
      totalRequests: 5280,
      failedRequests: 5280,
      uptime: 85.2,
      errorMessages: [
        "Connection refused",
        "Service unavailable",
        "Authentication failed",
      ],
    },
    {
      id: "webhook-truelayer",
      name: "TrueLayer Open Banking",
      endpoint: "https://api.billbuddy.com/webhooks/truelayer",
      provider: "TrueLayer",
      status: "maintenance",
      lastPing: "2024-03-15T12:00:00Z",
      responseTime: 0,
      successRate: 100,
      totalRequests: 3200,
      failedRequests: 0,
      uptime: 99.9,
      errorMessages: [],
    },
  ],
  totalSynced: 125420,
  syncErrors: 1247,
  lastSyncTime: "2024-03-15T14:29:00Z",
  syncFrequency: "realtime",
  queueLength: 23,
};

export const mockAdminConfig: AdminConfiguration = {
  widgets: [
    {
      id: "compliance-widget",
      type: "compliance",
      title: "Compliance Status",
      description: "Track legal agreement completion and compliance metrics",
      refreshInterval: 300,
      autoRefresh: true,
      permissions: ["admin", "compliance"],
      configurable: true,
      settings: {
        showTrends: true,
        alertThreshold: 80,
        displayMode: "circular",
      },
    },
    {
      id: "risk-widget",
      type: "risk",
      title: "Risk Flags Monitor",
      description: "Monitor and manage system risk flags and alerts",
      refreshInterval: 60,
      autoRefresh: true,
      permissions: ["admin", "security", "risk"],
      configurable: true,
      settings: {
        autoAssign: false,
        escalationTime: 3600,
        showResolved: false,
      },
    },
    {
      id: "sync-widget",
      type: "sync",
      title: "Bill Sync Status",
      description: "Monitor webhook health and bill synchronization status",
      refreshInterval: 30,
      autoRefresh: true,
      permissions: ["admin", "operations"],
      configurable: true,
      settings: {
        showMaintenanceMode: true,
        alertOnDowntime: true,
        responseTimeThreshold: 1000,
      },
    },
  ],
  layout: {
    grid: "3x1",
    breakpoints: {
      mobile: 768,
      tablet: 1024,
      desktop: 1440,
    },
  },
  notifications: {
    email: true,
    browser: true,
    slack: false,
  },
  thresholds: {
    compliance: {
      critical: 70,
      warning: 85,
    },
    risk: {
      high: 7,
      escalation: 3600,
    },
    sync: {
      downtime: 300,
      errorRate: 5,
    },
  },
};
